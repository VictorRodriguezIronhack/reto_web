[{"/home/loreto/Escritorio/Reto/reto_web/client/src/index.js":"1","/home/loreto/Escritorio/Reto/reto_web/client/src/components/App.js":"2","/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phones/phones-list.js":"3","/home/loreto/Escritorio/Reto/reto_web/client/src/service/phone.service.js":"4","/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phones/phone-card.js":"5","/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phone-details/phone-details.js":"6","/home/loreto/Escritorio/Reto/reto_web/client/src/service/auth.service.js":"7","/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Login/Login.js":"8","/home/loreto/Escritorio/Reto/reto_web/client/src/components/shared/Spinner/Loader.js":"9"},{"size":296,"mtime":1610635698034,"results":"10","hashOfConfig":"11"},{"size":1516,"mtime":1610917596954,"results":"12","hashOfConfig":"11"},{"size":1124,"mtime":1610918337360,"results":"13","hashOfConfig":"11"},{"size":372,"mtime":1610808014506,"results":"14","hashOfConfig":"11"},{"size":688,"mtime":1610817341244,"results":"15","hashOfConfig":"11"},{"size":2854,"mtime":1610828481983,"results":"16","hashOfConfig":"11"},{"size":413,"mtime":1610798684050,"results":"17","hashOfConfig":"11"},{"size":2383,"mtime":1610828807829,"results":"18","hashOfConfig":"11"},{"size":177,"mtime":1610917503406,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"2x921h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/loreto/Escritorio/Reto/reto_web/client/src/index.js",[],["42","43"],"/home/loreto/Escritorio/Reto/reto_web/client/src/components/App.js",[],"/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phones/phones-list.js",["44"],"import React, { useState, useEffect } from 'react'\nimport { Container, Row } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport PhoneService from './../../../service/phone.service'\nimport PhoneCard from './phone-card'\n\n\nfunction PhoneList () {\n    const phoneService = new PhoneService()\n    const [phone, setPhones] = useState([])\n\n\n    useEffect(() => {\n        phoneService.getPhones()\n            .then(phone => {\n                setPhones(phone.data)\n            })\n        .catch(err => console.log(err))\n    }, [])\n\n    const Title = styled.h2`\n    color: white;\n    text-align: center;\n    margin-top: 30px;\n    text-transform: uppercase;\n    text-shadow: 0 1px white, 0 5px #092756;\n    `\n\n    return (\n        <body className=\"body\" style={{ position: \"absolute\", width: \"100%\"}}>\n            <Container>\n                <Title>Which phone is best for you?</Title>\n                <Row className=\"phone-card\">\n                    {phone.map(elm => <PhoneCard key={elm._id} {...elm}></PhoneCard>)}\n                </Row>\n            </Container>\n        </body>\n    )\n} \n\nexport default PhoneList ","/home/loreto/Escritorio/Reto/reto_web/client/src/service/phone.service.js",[],"/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phones/phone-card.js",[],["45","46"],"/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Phone-details/phone-details.js",[],"/home/loreto/Escritorio/Reto/reto_web/client/src/service/auth.service.js",[],"/home/loreto/Escritorio/Reto/reto_web/client/src/components/pages/Login/Login.js",["47"],"import React, { useState } from 'react'\nimport { Container, Row, Col, Form, Button } from 'react-bootstrap'\nimport styled from 'styled-components'\nimport AuthService from './../../../service/auth.service'\nimport './Login.css'\nimport Loader from './../../shared/Spinner/Loader'\n\nfunction Login(props) {\n    const authService = new AuthService()\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    const [error, setError] = useState('')\n    const [processing, setProcessing] = useState('')\n\n\n    const onSubmit = e => {\n        e.preventDefault()\n        setProcessing(true)\n        authService.login({ username, password })\n            .then(() => {\n                setUsername('')\n                setPassword('')\n                setError('')\n                setProcessing('')\n                props.history.push('/listado')\n            })\n            .catch(err => {\n                setError(console.log(err))\n                setProcessing(false)\n        })\n    }\n\n    const TitleForm = styled.h1`\n    color: #fff;\n    text-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n    letter-spacing: 1px;\n    text-align: center;\n    `\n\n    return ( \n        <body className=\"body\" style={{ position: \"absolute\", width: \"100%\", height: \"100%\", objectFit: \"cover\"}}>\n        <Container className=\"login\">\n            <Row>\n                <Col>\n                    <TitleForm>Iniciar sesión</TitleForm>\n                    <hr />\n                    <Form onSubmit={onSubmit} >\n                        <Form.Group  id=\"username\">\n                            <Form.Control className=\"input\" type=\"text\" placeholder=\"usuaria\" name=\"username\" value={username} onChange={e => setUsername(e.currentTarget.value)} />\n                        </Form.Group>\n                        <Form.Group id=\"password\">\n                            <Form.Control className=\"input\" type=\"password\" name=\"password\" placeholder=\"contraseña\" value={password} onChange={e => setPassword(e.currentTarget.value)} />\n                        </Form.Group>\n                        <Button className= \"btn btn-primary btn-block\"  type=\"submit\">{processing ? 'Comprobando credenciales...' : 'Iniciar sesión'}</Button>\n                    </Form>\n                </Col>\n                </Row>\n            <Loader />\n            </Container>\n        </body>\n    )\n}\n\nexport default Login","/home/loreto/Escritorio/Reto/reto_web/client/src/components/shared/Spinner/Loader.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":19,"column":8,"nodeType":"54","endLine":19,"endColumn":10,"suggestions":"55"},{"ruleId":"48","replacedBy":"56"},{"ruleId":"50","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":12,"column":12,"nodeType":"60","messageId":"61","endLine":12,"endColumn":17},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'phoneService'. Either include it or remove the dependency array.","ArrayExpression",["64"],["62"],["63"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [phoneService]",{"range":"67","text":"68"},[536,538],"[phoneService]"]